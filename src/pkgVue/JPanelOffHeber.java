/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pkgVue;

import java.util.Iterator;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Query;
import pkgEntite.Etablissement;
import pkgEntite.Offre;
import pkgEntite.Typechambre;

/**
 *
 * @author Kevin
 */
public class JPanelOffHeber extends javax.swing.JPanel {

    /**
     * Creates new form JPanelOffHeber
     */
    public JPanelOffHeber() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCbOffHeber = new javax.swing.JComboBox();
        jLblTitre1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabOffCh = new javax.swing.JTable();
        txtNbChambres = new javax.swing.JTextField();
        jBtnModifier = new javax.swing.JButton();

        jCbOffHeber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbOffHeberActionPerformed(evt);
            }
        });

        jLblTitre1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLblTitre1.setText("Etablissements");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Nombre de chambres");

        jTabOffCh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Types", "Capacit√©", "Nombre de chambres"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTabOffCh);
        jTabOffCh.getColumnModel().getColumn(0).setResizable(false);
        jTabOffCh.getColumnModel().getColumn(0).setPreferredWidth(200);
        jTabOffCh.getColumnModel().getColumn(1).setResizable(false);
        jTabOffCh.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTabOffCh.getColumnModel().getColumn(2).setResizable(false);
        jTabOffCh.getColumnModel().getColumn(2).setPreferredWidth(200);

        jBtnModifier.setText("Modifier");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLblTitre1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(304, 304, 304)
                        .addComponent(txtNbChambres, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(339, 339, 339)
                        .addComponent(jBtnModifier)))
                .addContainerGap(196, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jCbOffHeber, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(268, 268, 268))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLblTitre1)
                .addGap(21, 21, 21)
                .addComponent(jCbOffHeber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(43, 43, 43)
                .addComponent(txtNbChambres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(jBtnModifier)
                .addContainerGap(64, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCbOffHeberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbOffHeberActionPerformed
        // TODO add your handling code here: 
        
    }//GEN-LAST:event_jCbOffHeberActionPerformed

    public void chargerListeEtablissement(){
        
        String sQuery ;
        
        sQuery = "from Etablissement";
        Query qm = JFrameFestival.getSession().createQuery(sQuery);
        Iterator etab= qm.iterate();
        while (etab.hasNext()){
            Etablissement unEtablissement = (Etablissement)etab.next();
           jCbOffHeber.addItem(unEtablissement.getEtaNom());
           }

        chargerTabEtab();
        
    }
    
    public void chargerTabEtab(){
        
        String sReq = "from Etablissement where Eta_Nom = ?";
        Query qEtabs = JFrameFestival.getSession().createQuery(sReq);
        qEtabs.setParameter(0, jCbOffHeber.getSelectedItem().toString());
        
        Etablissement unEtalissement = (Etablissement) qEtabs.uniqueResult();
        
        String idEtab = unEtalissement.getEtaId();
        
        String sQuery2 = "from Offre where Off_etablissement = ?";
        Query qNbTypeCh = JFrameFestival.getSession().createQuery(sQuery2);
        qNbTypeCh.setParameter(0, idEtab);
        
//        String sQuery3 = "from Typechambre";
//        Query qTypeCh = JFrameFestival.getSession().createQuery(sQuery3);
        
        Iterator nbchdispo = qNbTypeCh.iterate();
        
        //Iterator typech = qTypeCh.iterate();

        while (nbchdispo.hasNext()){
            Offre uneOffre = (Offre) nbchdispo.next();
            System.out.println(uneOffre.getOffNbchambres() + "  " + uneOffre.getEtablissement().getEtaNom()+"   "+uneOffre.getTypechambre());
            //Typechambre unType = (Typechambre) typech.next();
            ((DefaultTableModel) jTabOffCh.getModel()).addRow(new Object[]
            {uneOffre.getTypechambre(), uneOffre.getTypechambre(), uneOffre.getOffNbchambres()});
        }
        
        //chargerTypesChambre();
        
    }
    
//    public void chargerTypesChambre(){
//        
//        String sReq = "from Etablissement where Eta_Nom = ?";
//        Query q = JFrameFestival.getSession().createQuery(sReq);
//        q.setParameter(0, jCbOffHeber.getSelectedItem().toString());
//        
//        Etablissement unEtalissement = (Etablissement) q.uniqueResult();
//        
//        String idEtab = unEtalissement.getEtaId();
//        
//        System.out.println(unEtalissement.getEtaId() + "    " + unEtalissement.getEtaNom() + "    " + idEtab);
//
//        String sQuery2 = "from Offre where Off_etablissement = ?";
//        Query qNbTypeCh = JFrameFestival.getSession().createQuery(sQuery2);
//        qNbTypeCh.setParameter(0, idEtab);
//        
//        Iterator nbchdispo = qNbTypeCh.iterate();
//        
//        while (nbchdispo.hasNext()){
//            Offre uneOffre = (Offre) nbchdispo.next();
//            
//            ((DefaultTableModel) jTabOffCh.getModel()).addRow(new Object[]
//            { null, null, uneOffre.getOffNbchambres()});
//        }
//        
//    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnModifier;
    private javax.swing.JComboBox jCbOffHeber;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLblTitre1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabOffCh;
    private javax.swing.JTextField txtNbChambres;
    // End of variables declaration//GEN-END:variables
}
