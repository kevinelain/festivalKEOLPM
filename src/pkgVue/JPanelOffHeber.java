/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pkgVue;

import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Query;
import org.hibernate.Transaction;
import pkgEntite.Etablissement;
import pkgEntite.Offre;
import pkgEntite.Typechambre;

/**
 *
 * @author Kevin
 */
public class JPanelOffHeber extends javax.swing.JPanel {

    /**
     * Creates new form JPanelOffHeber
     */
    public JPanelOffHeber() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLblTitre1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabOffCh = new javax.swing.JTable();
        txtNbChambres = new javax.swing.JTextField();
        jBtnModifier = new javax.swing.JButton();
        jCbOffHeber = new javax.swing.JComboBox();

        setPreferredSize(new java.awt.Dimension(800, 800));

        jCbOffHeber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbOffHeberActionPerformed(evt);
            }
        });

        jLblTitre1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLblTitre1.setText("Etablissements");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Nombre de chambres");

        jTabOffCh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Types", "Capacité", "Nombre de chambres"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTabOffCh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabOffChMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabOffCh);
        jTabOffCh.getColumnModel().getColumn(0).setResizable(false);
        jTabOffCh.getColumnModel().getColumn(0).setPreferredWidth(200);
        jTabOffCh.getColumnModel().getColumn(1).setResizable(false);
        jTabOffCh.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTabOffCh.getColumnModel().getColumn(1).setHeaderValue("Capacité");
        jTabOffCh.getColumnModel().getColumn(2).setResizable(false);
        jTabOffCh.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTabOffCh.getColumnModel().getColumn(2).setHeaderValue("Nombre de chambres");

        jBtnModifier.setText("Modifier");
        jBtnModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnModifierActionPerformed(evt);
            }
        });

        jCbOffHeber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbOffHeberActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLblTitre1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(jCbOffHeber, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(314, 314, 314)
                        .addComponent(jBtnModifier))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(txtNbChambres, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(229, Short.MAX_VALUE))
                        .addGap(339, 339, 339)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLblTitre1)
                .addGap(34, 34, 34)
                .addComponent(jCbOffHeber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(txtNbChambres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBtnModifier)
                .addGap(49, 49, 49))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTabOffChMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabOffChMouseClicked
        // TODO add your handling code here:
        int ligne = jTabOffCh.getSelectedRow();
        Object nbChambres = jTabOffCh.getValueAt(ligne, 2);
        chargerChampsNbChambre(nbChambres);
    }//GEN-LAST:event_jTabOffChMouseClicked

    private void jBtnModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnModifierActionPerformed
        // TODO add your handling code here:    //lorsqu'on clique sur le bouton Modifier
        int ligne = jTabOffCh.getSelectedRow();
        Object typeChambre = jTabOffCh.getValueAt(ligne, 0);
        
        String idEtab = selectEtab();
        
        String sReq = "FROM Offre where Off_Typechambre  = ? and Off_Etablissement = ?";        //selection de l'offre
        Query q = JFrameFestival.getSession().createQuery(sReq);
        q.setParameter(0, typeChambre.toString());
        q.setParameter(1, idEtab);
        
        Offre uneOffre = (Offre)q.uniqueResult();           //resultat de la requete en objet Offre
        
        if (uneOffre!=null){    //si objet Offre existe et valide, alors update du nombre de chambre entré dans le champs
            uneOffre.setOffNbchambres(Byte.parseByte(txtNbChambres.getText()));
            Transaction tx = JFrameFestival.getSession().beginTransaction();
            JFrameFestival.getSession().update(uneOffre);
            tx.commit();
            
            JOptionPane.showMessageDialog(null, "Nombre de chambres modifiées avec succés");
        }
        
        txtNbChambres.setText("");
        
    }//GEN-LAST:event_jBtnModifierActionPerformed

    private void jCbOffHeberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbOffHeberActionPerformed
        // TODO add your handling code here:
        chargerTabEtab();
    }//GEN-LAST:event_jCbOffHeberActionPerformed

    public void chargerListeEtablissement(){    //charge la liste d'établissement dans la liste déroulante
        //jCbOffHeber.removeAllItems();
        String sQuery ;
        
        sQuery = "from Etablissement";
        Query qm = JFrameFestival.getSession().createQuery(sQuery);
        Iterator etab= qm.iterate();
        while (etab.hasNext()){
            Etablissement unEtablissement = (Etablissement)etab.next();
            jCbOffHeber.addItem(unEtablissement.getEtaNom());
        }

        chargerTabEtab();
    }
    
    public void chargerTabEtab(){   // charge la liste des chambres disponibles selon les établissements
        
        viderTableau();

        String idEtab = selectEtab();
        
        String sQuery2 = "from Offre where Off_etablissement = ?";
        Query qNbTypeCh = JFrameFestival.getSession().createQuery(sQuery2);
        qNbTypeCh.setParameter(0, idEtab);
         
        Iterator nbchdispo = qNbTypeCh.iterate();
        
        while (nbchdispo.hasNext()){
            Offre uneOffre = (Offre) nbchdispo.next();  //tant qu'il y a une offre de chambres pour l'établissement, continuer
            
            String sQuery3 = "from Typechambre where Tch_Id = ?";
            Query qTypeCh = JFrameFestival.getSession().createQuery(sQuery3);
            qTypeCh.setParameter(0, uneOffre.getId().getOffTypechambre());
            Typechambre unTypeChambre = (Typechambre) qTypeCh.uniqueResult();
            
            ((DefaultTableModel) jTabOffCh.getModel()).addRow(new Object[]
            {uneOffre.getId().getOffTypechambre(), unTypeChambre.getTchLibelle(), uneOffre.getOffNbchambres()});
        }
    }
    
    public String selectEtab(){     //retourne l'ID de l'établissement séléctionné dans la liste déroulante
        
        String sReq = "from Etablissement where Eta_Nom = ?";
        Query qEtabs = JFrameFestival.getSession().createQuery(sReq);
        qEtabs.setParameter(0, jCbOffHeber.getSelectedItem().toString());
        
        Etablissement unEtalissement = (Etablissement) qEtabs.uniqueResult();
        
        String idEtab = unEtalissement.getEtaId();
        
        return idEtab;
    }
    
    public void viderTableau(){     //vide le tableau pour avoir un tableau "propre" et éviter les "accumulations"
        
        DefaultTableModel modele = (DefaultTableModel)jTabOffCh.getModel();
        modele.setRowCount(0);
        jTabOffCh.setModel(modele);
        jTabOffCh.repaint();
    }
            
    
    public void chargerChampsNbChambre(Object pNbChambres){     //charge le champs txtNbChambres
        
        txtNbChambres.setText(pNbChambres.toString());
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnModifier;
    private javax.swing.JComboBox jCbOffHeber;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLblTitre1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabOffCh;
    private javax.swing.JTextField txtNbChambres;
    // End of variables declaration//GEN-END:variables
}
